// Mocks generated by Mockito 5.4.5 from annotations
// in taskify/test/data/repositories/list_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:supabase_flutter/supabase_flutter.dart' as _i2;
import 'package:taskify/data/datasources/supabase_datasource.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSupabaseClient_0 extends _i1.SmartFake
    implements _i2.SupabaseClient {
  _FakeSupabaseClient_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [SupabaseDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockSupabaseDatasource extends _i1.Mock
    implements _i3.SupabaseDatasource {
  MockSupabaseDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SupabaseClient get client =>
      (super.noSuchMethod(
            Invocation.getter(#client),
            returnValue: _FakeSupabaseClient_0(
              this,
              Invocation.getter(#client),
            ),
          )
          as _i2.SupabaseClient);

  @override
  _i4.Future<List<Map<String, dynamic>>> getLists() =>
      (super.noSuchMethod(
            Invocation.method(#getLists, []),
            returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i4.Future<List<Map<String, dynamic>>>);

  @override
  _i4.Future<void> addList(String? name) =>
      (super.noSuchMethod(
            Invocation.method(#addList, [name]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> updateList(String? id, String? name) =>
      (super.noSuchMethod(
            Invocation.method(#updateList, [id, name]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> deleteList(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteList, [id]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<List<Map<String, dynamic>>> getItems(String? listId) =>
      (super.noSuchMethod(
            Invocation.method(#getItems, [listId]),
            returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i4.Future<List<Map<String, dynamic>>>);

  @override
  _i4.Future<void> addItem(
    String? listId,
    String? title,
    String? description,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#addItem, [listId, title, description]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> updateItem(
    String? itemId,
    String? title,
    String? description,
    bool? completed,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateItem, [
              itemId,
              title,
              description,
              completed,
            ]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> deleteItem(String? itemId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteItem, [itemId]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}
